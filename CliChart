#!/usr/bin/env python3
from util import findBox, parseArguments, numberMatrix, printLines
from query import getPricesCG, getPricesPolygon, getTickers

# POLYGON.io APY KEY !!! INSERT HERE YOUR APIKEY !!!:
APIKEY = ""

# Get CoinGecko tickers
tickersCoinGecko = getTickers()

# parse arguments
args = parseArguments()

if format(str(args["coin"])) in tickersCoinGecko:
    timeAccpt = ["1", "7", "30", "90", "180", "356"]
    if format(str(args["days"])) not in timeAccpt:
        print("wrong time format:")
        print(f"Accepted time formats are {timeAccpt}")
        print("example:CliChart -c bitcoin -d 90 -b usd -x 20 -y 15")
        exit()
    # req market data
    timec, openc, highc, lowc, closec = getPricesCG(format(str(args["coin"])),
                                                    format(str(args["base"])),
                                                    format(int(args["days"])))
    # prep data
    candlesJump, priceJump, tSpan, yMax, yMin, tJump, candlesSkip = findBox(highc,
                                                                            lowc, timec,
                                                                            args["hlim"],
                                                                            args["vlim"])
    # number matrix
    numberMatrix = numberMatrix(openc, highc, lowc, closec, candlesJump,
                                priceJump, yMax, candlesSkip, args["hlim"],
                                args["vlim"])
    # printing Lines
    printLines(numberMatrix, args['hlim'], args['vlim'],
               priceJump, yMax, format(str(args["coin"])),
               tJump, candlesJump, closec[len(closec) - 1],
               format(str(args["base"])))
else:
    # req market data
    timec, openc, highc, lowc, closec = getPricesPolygon(format(str(args["coin"])),
                                                         format(
                                                             str(args["base"])),
                                                         format(
                                                             int(args["days"])),
                                                         APIKEY)
    # prep data
    candlesJump, priceJump, tSpan, yMax, yMin, tJump, candlesSkip = findBox(highc,
                                                                            lowc, timec,
                                                                            args["hlim"],
                                                                            args["vlim"])
    # number matrix
    numberMatrix = numberMatrix(openc, highc, lowc, closec, candlesJump,
                                priceJump, yMax, candlesSkip, args["hlim"],
                                args["vlim"])
    # printing Lines
    printLines(numberMatrix, args['hlim'], args['vlim'],
               priceJump, yMax, format(str(args["coin"])),
               tJump, candlesJump, closec[len(closec) - 1],
               format(str(args["base"])))
